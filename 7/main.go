package main

import (
	"fmt"
	"math/rand"
	"sync"
	"time"
)

func main() {
	// Создаём counter, чтобы новые значения записывались в карту по различным ключам
	var counter int
	// Создаем переменную wg, необходимую для ожидания завершения горутин
	var wg sync.WaitGroup
	// Создаем переменную mu, необходимую для конкурентного доступа к данным
	var mu sync.Mutex
	// Создаем переменную rg, необходимую для генерации случайных чисел
	rg := rand.New(rand.NewSource(time.Now().Unix()))
	// Создаем карту
	myMap := make(map[int]int)
	// Конкурентно добавим 50 значений в карту
	for i := 0; i < 50; i++ {
		// Перед вызовом новой горутины инкрементируем переменную для ожидания завершения горутин
		wg.Add(1)
		go func() {
			// После выполнения горутины декрементируем счетчик
			defer wg.Done()
			// Блокируем для других горутин доступ к записи в карту и инкремент переменнной counter,
			// чтобы по одному ключу не записалось значение несколько раз
			mu.Lock()
			// Записываем случайное значение по ключу
			myMap[counter] = rg.Intn(9000) + 1000
			// Инкрементируем переменную
			counter++
			// Даем доступ остальным горутинам на выполнение данных действий
			mu.Unlock()
		}()
	}
	// Ожидаем завершения работы горутин
	wg.Wait()
	// Выводим карту
	fmt.Println(myMap)
}
